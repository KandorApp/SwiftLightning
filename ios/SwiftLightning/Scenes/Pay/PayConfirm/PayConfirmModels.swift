//
//  PayConfirmModels.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-04-28.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum PayConfirm {
  
  // MARK: Refresh
  
  enum Refresh {
    struct Request { }
    struct Response<C: Currency> {
      // Data Store Values
      var amount: Bitcoin
      var address: String
      var description: String
      var fee: Bitcoin?
      var paymentType: BitcoinPaymentType
      var confSpeed: OnChainConfirmSpeed?
      
      // Calculated Values
      var fiatAmount: Money<C>
      var fiatFee: Money<C>
      var totalAmount: Bitcoin
      var fiatTotalAmt: Money<C>
    }
    struct ViewModel {
      var amount: String
      var refAmt: String
      var address: String
      var description: String
      var confSpeed: String?
      var amtToSend: String
      var fee: String
      var totalAmt: String
      var paymentType: BitcoinPaymentType
    }
  }
  
  
  // MARK: SendPayment
  
  enum SendPayment {
    enum Error: LocalizedError {
      case lnPayRspErr(String)
      
      var localizedDescription: String {
        switch self {
        case .lnPayRspErr(let payError):
          return NSLocalizedString("Lightning Payment Responded with Error - \(payError)", comment: "SendPayemnt.Error enum")
        }
      }
    }
    struct Request {
      // User Data Store values
    }
    struct Response {
      var result: Result<Void>
    }
    struct ViewModel {
      var alertTitle: String
      var alertMsg: String
    }
    struct ErrorVM {
      var errTitle: String
      var errMsg: String
    }
  }
}
