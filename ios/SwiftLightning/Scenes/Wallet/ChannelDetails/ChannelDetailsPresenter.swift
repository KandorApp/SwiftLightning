//
//  ChannelDetailsPresenter.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-05-04.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChannelDetailsPresentationLogic {
  func presentRefresh(response: ChannelDetails.Refresh.Response)
}

class ChannelDetailsPresenter: ChannelDetailsPresentationLogic {
  weak var viewController: ChannelDetailsDisplayLogic?
  
  // MARK: Refresh
  
  func presentRefresh(response: ChannelDetails.Refresh.Response) {
    switch response.result {
    case .success(let channelVM):
      
      switch channelVM.state {
      case .disconnected:
        let viewModel = ChannelDetails.Refresh.ViewModel(channelVM: channelVM,
                                                         leftButtonHidden: false,
                                                         rightButtonHidden: false)
        viewController?.displayRefresh(viewModel: viewModel)
        
      case .pendingClose, .pendingOpen, .pendingForceClose:
        let viewModel = ChannelDetails.Refresh.ViewModel(channelVM: channelVM,
                                                         leftButtonHidden: true,
                                                         rightButtonHidden: true)
        viewController?.displayRefresh(viewModel: viewModel)
        
      default:
        let viewModel = ChannelDetails.Refresh.ViewModel(channelVM: channelVM,
                                                         leftButtonHidden: true,
                                                         rightButtonHidden: false)
        viewController?.displayRefresh(viewModel: viewModel)
      }
      
    case .failure(let error):
      let viewModel = ChannelDetails.ErrorVM(errTitle: "Node Info Error",
                                             errMsg: error.localizedDescription)
      viewController?.displayError(viewModel: viewModel)
    }
  }
}
