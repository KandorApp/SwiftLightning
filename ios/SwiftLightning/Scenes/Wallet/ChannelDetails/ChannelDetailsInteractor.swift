//
//  ChannelDetailsInteractor.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-05-04.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChannelDetailsBusinessLogic {
  func refresh(request: ChannelDetails.Refresh.Request)
}

protocol ChannelDetailsDataStore {
  var channelVM: ChannelVM? { get set }
}

class ChannelDetailsInteractor: ChannelDetailsBusinessLogic, ChannelDetailsDataStore
{
  var presenter: ChannelDetailsPresentationLogic?
  
  // MARK: Data Store
  
  var channelVM: ChannelVM?
  
  
  // MARK: Refresh
  
  func refresh(request: ChannelDetails.Refresh.Request) {
    guard var channelVM = channelVM else {
      SLLog.assert("channelVM = nil in ChannelDetails interactor")
      let result = Result<ChannelVM>.failure(ChannelDetails.Refresh.Error.noChannelInfo)
      let response = ChannelDetails.Refresh.Response(result: result)
      self.presenter?.presentRefresh(response: response)
      return
    }
    
    // Try to grab additional node details
    LNServices.getNodeInfo(pubKey: channelVM.nodePubKey) { (responder) in
      do {
        let nodeInfo = try responder()
        
        let ipPort = nodeInfo.address[0].split(separator: ":")

        channelVM.ipAddress = String(ipPort[0])
        channelVM.port = String(ipPort[1])
        channelVM.alias = nodeInfo.alias
        
        let result = Result<ChannelVM>.success(channelVM)
        let response = ChannelDetails.Refresh.Response(result: result)
        self.presenter?.presentRefresh(response: response)
        
      } catch {
        let result = Result<ChannelVM>.failure(error)
        let response = ChannelDetails.Refresh.Response(result: result)
        self.presenter?.presentRefresh(response: response)
      }
    }
  }
}
