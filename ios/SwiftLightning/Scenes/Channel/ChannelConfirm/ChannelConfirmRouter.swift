//
//  ChannelConfirmRouter.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-04-25.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ChannelConfirmRoutingLogic {
  func routeToChannelOpen()
}


protocol ChannelConfirmDataPassing {
  var dataStore: ChannelConfirmDataStore? { get }
}


class ChannelConfirmRouter: NSObject, ChannelConfirmRoutingLogic, ChannelConfirmDataPassing {
  
  weak var viewController: ChannelConfirmViewController?
  var dataStore: ChannelConfirmDataStore?
  
  
  // MARK: Routing
  
  func routeToChannelOpen() {
//    let destinationVC = viewController!.presentingViewController as! ChannelOpenViewController
//    var destinationDS = destinationVC.router!.dataStore!
//    passDataToChannelOpen(source: dataStore!, destination: &destinationDS)
    navigateToChannelOpen(source: viewController!)
  }

  
  // MARK: Navigation
  
  func navigateToChannelOpen(source: ChannelConfirmViewController) {
    guard let navigationController = source.navigationController else {
      SLLog.assert("\(type(of: source)).navigationController = nil")
      return
    }
    navigationController.popViewController(animated: true)
  }
  
  
  // MARK: Passing Data
  
  func passDataToChannelOpen(source: ChannelConfirmDataStore, destination: inout ChannelOpenDataStore) {
  }
}
