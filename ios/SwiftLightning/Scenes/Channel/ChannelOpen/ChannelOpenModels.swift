//
//  ChannelOpenModels.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-04-23.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ChannelOpen
{
  enum ValidateNodePubKey {
    struct Request {
      var nodePubKey: String
    }
    struct Response {
      var isKeyValid: Bool
    }
    struct WarningVM {
      var errorLabel: String
    }
  }
  
  enum ValidateNodeIPPort {
    struct Request {
      var nodeIPPort: String
    }
    struct Response {
      var isIPValid: Bool
      var isPortValid: Bool
    }
    struct WarningVM {
      var errorLabel: String
    }
  }
  
  enum ValidateAmounts {
    enum Error {
      case invalid
      case insufficient
      case walletBalance
      case feeEstimation
      case minChannelSize
      case empty
    }
    struct Request {
      var fundingAmt: String
      var initPayAmt: String
      var confSpeed: OnChainConfirmSpeed
    }
    struct Response {
      var fundingError: ChannelOpen.ValidateAmounts.Error?
      var initPayError: ChannelOpen.ValidateAmounts.Error?
    }
    struct FundingWarningVM {
      var fundingErrorLabel: String
    }
    struct InitPayWarningVM {
      var initPayErrorLabel: String
    }
    struct ErrorVM {
      var errTitle: String
      var errMsg: String
    }
  }
  
  enum GetBalance {
    struct Request {
    }
    struct Response {
      var onChainBalance: Bitcoin?
    }
    struct ViewModel {
      var onChainBalance: String
    }
    struct ErrorVM {
      var errTitle: String
      var errMsg: String
    }
  }

//  enum GetRefFundingAmt {
//    struct Request {
//      var fundingAmt: String
//    }
//    struct Response<C: Currency> {
//      var refFundingAmt: Money<C>
//    }
//    struct ViewModel {
//      var refFundingAmg: String
//    }
//    struct ErrorVM {
//      var errTitle: String
//      var errMsg: String
//    }
//  }
//
//  enum GetRefInitPayAmt {
//    struct Request {
//      var initPayAmt: String
//    }
//    struct Resposne<C: Currency> {
//      var refInitPayAmt: Money<C>
//    }
//    struct ViewModel {
//      var refInitPayAmt: String
//    }
//    struct ErrVM {
//      var errTitle: String
//      var errMsg: String
//    }
//  }
//
//  enum GetFeeEstimate {
//    struct Request {
//      var confirmSpeed: OnChainConfirmSpeed
//    }
//    struct Response {
//      var isFundSufficient: Bool?
//    }
//    struct ViewModel {
//      var errTitle: String
//      var errMsg: String
//    }
//  }
  
  enum ChannelConfirm {
    struct Request {
      var nodePubKey: String
      var nodeIPPort: String
      var fundingAmt: String
      var initPayAmt: String
      var confSpeed: OnChainConfirmSpeed
    }
    struct Response {
      var isPubKeyValid: Bool
      var isIPValid: Bool
      var isPortValid: Bool
      var isFundingValid: Bool
      var isInitPayValid: Bool
    }
    struct ErrorVM {
      var errTitle: String
      var errMsg: String
    }
  }
}
