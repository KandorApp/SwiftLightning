//
//  MnemonicConfirmPresenter.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-04-19.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MnemonicConfirmPresentationLogic {
  func presentGenRandomIndices(response: MnemonicConfirm.GenRandomIndices.Response)
  func presentCheckSeedWords(response: MnemonicConfirm.CheckSeedWords.Response)
  func presentConfirmSeedWords(response: MnemonicConfirm.ConfirmSeedWords.Response)
}

class MnemonicConfirmPresenter: MnemonicConfirmPresentationLogic
{
  weak var viewController: MnemonicConfirmDisplayLogic?
  
  
  // MARK: Generate Random Indices
  
  func presentGenRandomIndices(response: MnemonicConfirm.GenRandomIndices.Response) {
    let viewModel = MnemonicConfirm.GenRandomIndices.ViewModel(labelTexts: ["\(response.wordIndices[0]+1).",
                                                                            "\(response.wordIndices[1]+1).",
                                                                            "\(response.wordIndices[2]+1)."])
    viewController?.displayGenRandomIndices(viewModel: viewModel)
  }
  
  
  // MARK: Check Seed Words
  
  func presentCheckSeedWords(response: MnemonicConfirm.CheckSeedWords.Response) {
    let hideCheckmarks = response.areSeedWordsCorrect.map { !$0 }
    
    if hideCheckmarks.contains(true) {
      let viewModel = MnemonicConfirm.CheckSeedWords.ViewModel(checkmarksHidden: hideCheckmarks,
                                                               confirmButtonText: "Please Confirm",
                                                               confirmButtonTextColor: UIColor.disabledText,
                                                               confirmButtonColor: UIColor.disabledGray,
                                                               confirmButtonShadowColor: UIColor.disabledGrayShadow,
                                                               confirmButtonEnable: false)
      viewController?.displayCheckSeedWords(viewModel: viewModel)
      
    } else {
      let viewModel = MnemonicConfirm.CheckSeedWords.ViewModel(checkmarksHidden: hideCheckmarks,
                                                               confirmButtonText: "Confirm",
                                                               confirmButtonTextColor: UIColor.normalText,
                                                               confirmButtonColor: UIColor.medAquamarine,
                                                               confirmButtonShadowColor: UIColor.medAquamarineShadow,
                                                               confirmButtonEnable: true)
      viewController?.displayCheckSeedWords(viewModel: viewModel)
    }
  }
  
  
  // MARK: Confirm Seed Words
  
  func presentConfirmSeedWords(response: MnemonicConfirm.ConfirmSeedWords.Response) {
    if response.seedWordsCorrect {
      viewController?.displayConfirmSeedWords()
    } else {
      let viewModel = MnemonicConfirm.ConfirmSeedWords.ViewModel(errorTitle: "Incorect Seeds", errorMsg: "The seeds entered does not see correct. Please try again.")
      viewController?.displayConfirmSeedWordsFailure(viewModel: viewModel)
    }
  }
}
