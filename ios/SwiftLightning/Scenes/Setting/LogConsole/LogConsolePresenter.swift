//
//  LogConsolePresenter.swift
//  SwiftLightning
//
//  Created by Howard Lee on 2018-05-12.
//  Copyright (c) 2018 BiscottiGelato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LogConsolePresentationLogic {
  func presentReadLog(response: LogConsole.ReadLog.Response)
  func presentGetLogURL(response: LogConsole.GetLogURL.Response)
}

class LogConsolePresenter: LogConsolePresentationLogic {
  weak var viewController: LogConsoleDisplayLogic?
  
  
  // MARK: Read Log
  
  func presentReadLog(response: LogConsole.ReadLog.Response) {
    
    switch response.result {
    case .success(let logText):
      let viewModel = LogConsole.ReadLog.ViewModel(displayText: logText)
      viewController?.displayLogText(viewModel: viewModel)
    
    case .failure(let error):
      let viewModel = LogConsole.ErrorVM(errTitle: "Read Log Error",
                                         errMsg: error.localizedDescription)
      viewController?.displayError(viewModel: viewModel)
    }
  }
  
  func presentGetLogURL(response: LogConsole.GetLogURL.Response) {
    switch response.result {
    case .success(let logURL):
      let viewModel = LogConsole.GetLogURL.ViewModel(logURL: logURL)
      viewController?.displayLogExport(viewModel: viewModel)
      
    case .failure(let error):
      let viewModel = LogConsole.ErrorVM(errTitle: "Read Log Error",
                                         errMsg: error.localizedDescription)
      viewController?.displayError(viewModel: viewModel)
    }
  }
}
